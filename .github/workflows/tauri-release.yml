name: 'publish'
on:
  push:
    branches:
      - master

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    outputs:
      releaseId: ${{ steps.tauri.outputs.releaseHtmlUrl }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
      
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: export Windows variables
        run: |
          echo "TAURI_SIGNING_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }}" >> $GITHUB_ENV
          echo "TAURI_SIGNING_PRIVATE_KEY_PASSWORD=${{ secrets.TAURI_KEY_PASSWORD }}" >> $GITHUB_ENV
        shell: bash

      - name: install dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          updaterJsonPreferNsis: true
          args: ${{ matrix.args }}
          tagName: v__VERSION__
          releaseName: 'P&L Analyzer v__VERSION__'
          releaseBody: ${{ github.event.head_commit.message }}

  update-json:
    runs-on: ubuntu-latest
    needs: publish-tauri
    steps:
      - uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "[Bot] GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create or checkout branch
        run: |
          git checkout "update" || git checkout --orphan "update"
          
      - name: Remove all files
        run: |
          git rm -rf .

      - name: Fetch JSON file
        env:
          RELEASE_ID: ${{needs.publish-tauri.outputs.releaseId}}
        run: |
          echo "$RELEASE_ID"
          RELEASE_TAG=$(basename $RELEASE_ID)
          echo "$RELEASE_TAG"
          RELEASE_URL="https://github.com/AdamFunMaker/pl-analyzer/releases/download/$RELEASE_TAG/latest.json"
          echo "$RELEASE_URL"
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3.raw" -o latest.json -L "$RELEASE_URL"
          cat latest.json

      - name: Commit and push changes
        env:
          RELEASE_ID: ${{needs.publish-tauri.outputs.releaseId}}
        run: |
          git add latest.json
          git commit -m "Update version to $(basename $RELEASE_ID)"
          git push -u origin update --force